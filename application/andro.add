// ========================================================================
// Andromeda Node Manager Specification
// (C) Copyright 2005 Kenneth Downs. 
// This file is part of Andromeda
// ========================================================================
module sysmaint { uisort: 820; description: System Maintenance; }
module operations { 
   uisort: 100; description: Operations; 
   group $LOGIN { nomenu: N; }
   group admin  { nomenu: N; }
}

// Node manager needs URL to put into links for email resets
content variables {
	columns { variable;description;variable_value }
	values  { PWURL   ;URL For Node Manager; www.somewhere.com }
}

group thedudes {
   description: Solo Dudes;
   solo: Y;
}

//  Extra menu item for new user; requires some extra stuff
//
//module special   { description: Special Tasks; uisort: 50; }
//menu x_email     { description: Send a Test Email; module: special; }
//menu x_printtest { description: Printing tests; module: system; }


module tests { description: Examples and Test; uisort: 300; 
   group $LOGIN { permins: Y; permdel: Y; permupd: Y; permsel: Y; nomenu: N;}
}

group admin {
   permsel: Y; permins: Y; permupd: Y; permdel: Y; nomenu: N;
   
   module docs {
      permsel: Y; permins: Y; permupd: Y; permdel: Y; nomenu: N;
   }
   module system {
      permsel: Y; permins: Y; permupd: Y; permdel: Y; nomenu: N;
   }
   module reference {
      permsel: Y; permins: Y; permupd: Y; permdel: Y; nomenu: N;
   }
}


// ========================================================================
// AREA: Super users, a single table
// ========================================================================
table usersroot { 
	description: System Super-users;
	risimple: Y;
	module: sysmaint;
	
	column user_id { primary_key: Y; uisearch: Y; }
	column user_name { uisearch: Y; }
	column { email; user_disabled; user_pwkey; user_pwexp; hostip }
   
   column { member_password; automation_id: BLANK; description: Password; }
   column md5 { prefix: member_; description: MD5 Password; }

	//group andro_own  { permins: Y; permsel: Y; }
}

// ========================================================================
// AREA: Nodes and web directories
// ========================================================================
menu a_pullcode {
   module: operations;
   uisort: 99; 
   description: Pull Software Updates; 
}

//  TABLE: Nodes
//
column node      { description: Node;     type_id: char;  colprec: 10;  }
column node_url  { description: Node URL; type_id: vchar; colprec: 100; }
column dir_pub   { description: Public Directory;  type_id: vchar; colprec: 100; }
column local_flag { description: Local Node;      type_id: cbool; }
column prod_flag{ description: Production Node;   type_id: cbool; 
   automation_id: DEFAULT; auto_formula: N; 
}

table nodes {
   description: Nodes;
   module: operations;
   capspk: Y;
   
   column node { primary_key: Y; uisearch: Y; }
   column description { uisearch: Y; }
   column node_url    { uisearch: Y; }
   //column local_flag  { uisearch: Y; } 
   //column prod_flag   { uisearch: Y; }
   //column { dir_pub; }
}

table test {
   description: Test Table;
   module: operations;
   capspk: Y;
   
   column node { primary_key: Y; uisearch: Y; }
   column description { uisearch: Y; }
   column date { uisearch: Y; }
   column notes { uisearch: Y; }
}
   

column webpath { description: Nickname; type_id: char; colprec: 10; }
table webpaths {
        description: Local Web Directories;
        module: operations;
        capspk: Y;

        column webpath { primary_key:Y; uisearch: Y; }
        column description { uisearch: Y; }
        column { dir_pub;}
}

// ========================================================================
// AREA: Directories for libraries and applications
//
// Historical note: we use "templates" as the directory for 
// ========================================================================
column dirname { type_id:vchar; colprec: 15; description: Top Directory; }
table appdirs {
   description: Application Directories;
   module: operations;
   nomenu: N;
   
   column dirname { description: Top Directory; 
                        uisearch: Y;
                     primary_key: Y;
   }
   column flag { suffix: _vis;  description: Publicly Visible;  uisearch:Y; }
   column flag { suffix: _copy; uisearch: Y; description: Copy when publishing; }
   column flag { suffix: _lib;  uisearch: Y; description: Library Directory;   }
   column description { uisearch: Y; }
}
content appdirs {
   columns { dirname;     flag_lib; flag_copy; flag_vis;  description; }
   content { root;        Y;        Y;         N; To be copied to root; }
   content { lib;         Y;        Y;         N; Lib Server-Side Code; }
   content { clib;        Y;        Y;         Y; Lib Client-Side Code; }
   content { application; N;        Y;         N; App Server-Side Code; }
   content { appclib;     N;        Y;         Y; App Client-Side Code; }
   content { templates;   Y;        Y;         Y; UI Templates;     }
   content { generated;   N;        N;         N; Dictionary-generated code; }
   content { dynamic;     N;        N;         N; Dynamic Cache;             }
   content { files;       N;        N;         N; Imports/Exports, Misc files; }
   content { tmp;         N;        N;         N; Temporary Build Files;     }
   content { apppub;      N;        Y;         Y; App client-visible files; }
   content { instpub;     N;        N;         Y; Instance client-visible files; }
   content { docslib;     Y;        Y;         N; Lib Docs; }
   content { docsapp;     N;        Y;         N; App Docs; }
   content { docsgen;     N;        N;         N; Generated Docs; }
}
// ========================================================================
// AREA: Application Versions and Files
// ========================================================================
//
//  TABLE: Andromeda Applications
//
column application  { description: Application; type_id: char; colprec: 10; }
column appspec      { description: Specification File;  type_id: vchar; colprec: 30; }
column xdirs  {
   description: Extra Dirs (Comma separated);
   type_id: vchar;
   colprec: 200;
}
table applications { 
	description: Applications;
	module: operations;
	risimple: Y;
	
	column application { primary_key: Y; uisearch: Y; }
	column description { uisearch: Y; }
	column appspec { suffix: _boot; description: Bootstrap Spec File; 
   	automation_id: DEFAULT; auto_formula: AndroDBB;
   }
   column appspec { suffix: _lib;  description: Library Spec File;   
   	automation_id: DEFAULT; auto_formula: andro_universal;
   }
   column appspec { description: Spec File;   }
   foreign_key  { webpaths;
      column webpath { description: Web Path; }
   }
   
   column flag {
      suffix: _rolelogin;
      automation_id: DEFAULT;
      auto_formula: N;
      description: Allow Group Roles to Log in;
   }
   column flag {
      suffix: _pwmd5;
      automation_id: DEFAULT;
      auto_formula: N;
      description: Hardened Password Security;
   }
   foreign_key nodes {
      allow_empty: Y; 
      column node { description: Authoritative Node; }
   }
   column { xdirs; }
   column { template; }

	column { ts_ins; uid_ins; ts_upd; uid_upd;   }
   
	projection dropdown { column { description; }}
}	
	
column version { description: Version Code; type_id: char; colprec: 10; }
table appversions {
   description: Application Versions;
   module: operations;
   
   foreign_key  applications { uisearch: Y; primary_key: Y; uisearch:Y;}
   column version            { uisearch: Y; primary_key: Y; uisearch:Y;}
   column date               { suffix: _ts;  description: Version Date; uisearch:Y; }
   column notes              {               description: Version Notes; }
}
table appfiles {
   description: Application Version Files;
   module: operations;
   nomenu: Y;
   
   foreign_key { appversions;   primary_key: Y; uisearch:Y;}
   foreign_key { appdirs;                       uisearch:Y;}
   column      { filename;      primary_key: Y; uisearch:Y;}
   column      { filepath; }
   column      { filecnts; uisearch:Y;}
   column flag { suffix: _del; description: File Deleted;   }
   column ts   { prefix: file; description: File timestamp; uisearch:Y; } 
   column md5  { prefix: file; description: File md5;       }
}

// ========================================================================
// AREA: Instances
// An instance links into a application and version.  That application
// itself links over to libraries.
// ========================================================================
column instance { description: Instance Code; type_id:char; colprec: 12; }
column template { 
   description: Preferred Template; 
   type_id: vchar;
   colprec: 40;
}
table instances {
   module: operations;
   description: Instances; 
   
   column instance          { primary_key: Y; uisearch: Y; 
      // Odd point here: We cannot put a constraint on the foreign key,
      // which is a bummer.  So we have a constraint on the foreign key
      // defined on another column, go figure.
      chain cons {
         test { compare: @application = andro;
                return: Instances of Node Manager Are Not Allowed;
              }
      }
   
   }
   foreign_key applications { primary_key: Y; uisearch: Y; }
   column { template; } 
   
   // These are supposed to be filled in by builder 
   column version { uisearch: Y;               uiro: Y;}
}
table instbuilds {
   module: operations;
   description: Instance Builds;
   nomenu: Y;
   
   column recnum { primary_key: Y; }
   column application { suffix: _from; uiro: Y; }
   column version     { suffix: _from; uiro: Y;  }
   column application { suffix: _to;   uiro: Y; }
   column version     { suffix: _to;   uiro: Y; }
   
   column ts   { suffix: _beg;    uiro: Y; }
   column ts   { suffix: _end;    uiro: Y; }
   column flag { suffix: _close;  uiro: Y; }
   column flag { suffix: _ok;     uiro: Y; }
}

// Table of downloads history
column iphash { type_id: char; colprec: 32; description: IP Number Hash; }
table downloads {
   module: operations;
   description: Download History;
   
   column recnum { primary_key: Y; }
   column { iphash; filename; ts_ins; uisearch: Y; }
   
   index iphash { column { iphash; }}
}




